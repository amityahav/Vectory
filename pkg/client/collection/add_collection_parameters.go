// Code generated by go-swagger; DO NOT EDIT.

package collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"Vectory/pkg/models"
)

// NewAddCollectionParams creates a new AddCollectionParams object
// with the default values initialized.
func NewAddCollectionParams() *AddCollectionParams {
	var ()
	return &AddCollectionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddCollectionParamsWithTimeout creates a new AddCollectionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddCollectionParamsWithTimeout(timeout time.Duration) *AddCollectionParams {
	var ()
	return &AddCollectionParams{

		timeout: timeout,
	}
}

// NewAddCollectionParamsWithContext creates a new AddCollectionParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddCollectionParamsWithContext(ctx context.Context) *AddCollectionParams {
	var ()
	return &AddCollectionParams{

		Context: ctx,
	}
}

// NewAddCollectionParamsWithHTTPClient creates a new AddCollectionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddCollectionParamsWithHTTPClient(client *http.Client) *AddCollectionParams {
	var ()
	return &AddCollectionParams{
		HTTPClient: client,
	}
}

/*AddCollectionParams contains all the parameters to send to the API endpoint
for the add collection operation typically these are written to a http.Request
*/
type AddCollectionParams struct {

	/*Collection*/
	Collection *models.Collection

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add collection params
func (o *AddCollectionParams) WithTimeout(timeout time.Duration) *AddCollectionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add collection params
func (o *AddCollectionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add collection params
func (o *AddCollectionParams) WithContext(ctx context.Context) *AddCollectionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add collection params
func (o *AddCollectionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add collection params
func (o *AddCollectionParams) WithHTTPClient(client *http.Client) *AddCollectionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add collection params
func (o *AddCollectionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCollection adds the collection to the add collection params
func (o *AddCollectionParams) WithCollection(collection *models.Collection) *AddCollectionParams {
	o.SetCollection(collection)
	return o
}

// SetCollection adds the collection to the add collection params
func (o *AddCollectionParams) SetCollection(collection *models.Collection) {
	o.Collection = collection
}

// WriteToRequest writes these params to a swagger request
func (o *AddCollectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Collection != nil {
		if err := r.SetBodyParam(o.Collection); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"Vectory/gen/api/models"
)

// GetCollectionOKCode is the HTTP code returned for type GetCollectionOK
const GetCollectionOKCode int = 200

/*GetCollectionOK valid operation

swagger:response getCollectionOK
*/
type GetCollectionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Collection `json:"body,omitempty"`
}

// NewGetCollectionOK creates GetCollectionOK with default headers values
func NewGetCollectionOK() *GetCollectionOK {

	return &GetCollectionOK{}
}

// WithPayload adds the payload to the get collection o k response
func (o *GetCollectionOK) WithPayload(payload *models.Collection) *GetCollectionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get collection o k response
func (o *GetCollectionOK) SetPayload(payload *models.Collection) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCollectionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCollectionBadRequestCode is the HTTP code returned for type GetCollectionBadRequest
const GetCollectionBadRequestCode int = 400

/*GetCollectionBadRequest Invalid collection name

swagger:response getCollectionBadRequest
*/
type GetCollectionBadRequest struct {
}

// NewGetCollectionBadRequest creates GetCollectionBadRequest with default headers values
func NewGetCollectionBadRequest() *GetCollectionBadRequest {

	return &GetCollectionBadRequest{}
}

// WriteResponse to the client
func (o *GetCollectionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
